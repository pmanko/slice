= form_with model: [variable.project, variable], local: true do |form|
  = form.hidden_field :language, value: World.language, name: :language
  .form-group.row
    = form.label :display_name, nil, class: "col-md-2 col-form-label"
    .col-md-10
      .input-group
        = render "translations/language_prepend"
        = form.text_field :display_name, class: "form-control#{" is-invalid" if variable.errors[:display_name].present?}", data: { object: (@variable.new_record? ? "create-variable-name" : ""), variable_name_target: "#variable_name" }, placeholder: World.translate_language? ? variable[:display_name] : nil, value: variable.display_name(World.language)
      = render "forms/invalid_feedback", object: variable, key: :display_name
      = render "forms/help_text", help_text: help_text if defined?(help_text)


  - help_text = "Must be a lowercase letter <span class=\"badge badge-light\">a-z</span> followed by lowercase letters <span class=\"badge badge-light\">a-z</span>, numbers <span class=\"badge badge-light\">0-9</span>, or underscores <span class=\"badge badge-light\">_</span>. Max length <strong>32</strong> characters."
  .form-group.row
    = form.label :name, nil, class: "col-md-2 col-form-label"
    .col-md-10
      = form.text_field :name, class: "form-control#{" is-invalid" if variable.errors[:name].present?}", id: true
      = render "forms/invalid_feedback", object: variable, key: :name
      = render "forms/help_text", help_text: help_text

  = render "forms/horizontal/select", form: form, object: variable, key: :display_layout, options: Variable::DISPLAY_LAYOUTS
  = render "forms/horizontal/text_area", form: form, object: variable, key: :description, rows: 7
  = render "forms/horizontal/text_field", form: form, object: variable, key: :field_note, placeholder: World.translate_language? ? variable[:field_note] : nil, value: variable.field_note(World.language), prepend: World.translate_language? ? World.language : nil
  = render "forms/horizontal/select", form: form, object: variable, key: :variable_type, options: Variable::TYPE, include_blank: "---", id: true

  %div{ data: { object: "prepend-append" } }
    = render "forms/horizontal/text_field", form: form, object: variable, key: :prepend, placeholder: World.translate_language? ? variable[:prepend] : nil, value: variable.prepend(World.language), prepend: World.translate_language? ? World.language : nil
    = render "forms/horizontal/text_field", form: form, object: variable, key: :append, placeholder: World.translate_language? ? variable[:append] : nil, value: variable.append(World.language), prepend: World.translate_language? ? World.language : nil

  %div{ data: { object: "range" } }
    = render "forms/horizontal/number_field", form: form, object: variable, key: :hard_minimum
    = render "forms/horizontal/number_field", form: form, object: variable, key: :soft_minimum
    = render "forms/horizontal/number_field", form: form, object: variable, key: :soft_maximum
    = render "forms/horizontal/number_field", form: form, object: variable, key: :hard_maximum

  %div{ data: { object: "calculated-or-number" } }
    = render "forms/horizontal/text_field", form: form, object: variable, key: :units, placeholder: World.translate_language? ? variable[:units] : nil, value: variable.units(World.language), prepend: World.translate_language? ? World.language : nil

  %div{ data: { object: "date-or-time-of-day" } }
    = render "forms/horizontal/check_box", form: form, object: variable, key: :show_current_button, key_name: "Show current date/time button"

  %div{ data: { object: "time-of-day" } }
    = render "forms/horizontal/select", form: form, object: variable, key: :time_of_day_format, options: Variable::TIME_OF_DAY_FORMATS
    = render "forms/horizontal/check_box", form: form, object: variable, key: :show_seconds

  %div{ data: { object: "time-duration" } }
    = render "forms/horizontal/select", form: form, object: variable, key: :time_duration_format, options: Variable::TIME_DURATION_FORMATS

  %div{ data: { object: "date" } }
    = render "forms/horizontal/select", form: form, object: variable, key: :date_format, options: Variable::DATE_FORMATS
    = render "forms/horizontal/date_field", form: form, object: variable, key: :date_hard_minimum
    = render "forms/horizontal/date_field", form: form, object: variable, key: :date_hard_maximum
    = render "forms/horizontal/date_field", form: form, object: variable, key: :date_soft_minimum
    = render "forms/horizontal/date_field", form: form, object: variable, key: :date_soft_maximum
    = render "forms/horizontal/check_box", form: form, object: variable, key: :disallow_future_dates

  %div{ data: { object: "calculated" } }
    = render "forms/horizontal/text_area", form: form, object: variable, key: :calculation, value: variable.readable_calculation, rows: 7, help_text: "Examples: <ul class=\"list-unstyled\"><li><code>(var1 + var2) / var3</code></li><li><code>var1 == -9 ? -9 : var1 + var2</code></li></ul>", data: { object: "calculation-variable-name-textcomplete", project_id: @project.id }
    = render "forms/horizontal/text_field", form: form, object: variable, key: :calculated_format, help_text: "<ul class=\"list-unstyled\"><li>Precision: <strong>%0.02f</strong></li><li>Leading Zeros: <strong>%04d</strong></li></ul>"

  %div{ data: { object: "options" } }
    .form-group.row
      = form.label :domain_id, nil, class: "col-md-2 col-form-label"
      .col-md-10
        - if @variable.project.domains.size == 0
          .alert.alert-info
            %strong Heads up!
            In order to have choices, variables need to be associated to a domain
            of options. Variables can share domains.
            = link_to "Create Domain", new_project_domain_path(@variable.project), class: "btn btn-light btn-sm", target: "_blank"
        - else
          .row.col-buffer
            .col-6.col-sm-9
              = form.select :domain_id, [["---", nil]] + @variable.project.domains.order(:name).pluck(:name, :id), {}, class: "custom-select", data: { project_id: @variable.project.to_param }
            .col-6.col-sm-3
              = link_to "Create Domain", new_project_domain_path(@variable.project), class: "btn btn-light btn-block", target: "_blank"
          - if false
            .row
              .col-md-9
                .dashboard-container.p-3{ style: "overflow-x:hidden;overflow-y:scroll;max-height:200px" }
                  .mb-2
                    %strong Domain Values
                  #domain_values= render "domains/values", domain: @variable.domain
              - if @variable.captured_values.size > 0
                .col-md-3
                  .dashboard-container.p-3{ style: "overflow-x:hidden;overflow-y:scroll;max-height:200px" }
                    .mb-2
                      %strong Captured Values
                    %table
                      - @variable.captured_values.sort.each do |value|
                        %tr
                          %td{ style: "text-align:right" }= value

  %div{ data: { object: "checkbox-or-radio" } }
    = render "forms/horizontal/select", form: form, object: variable, key: :alignment, options: Variable::ALIGNMENT

  %div{ data: { object: "grid" } }
    = render "forms/horizontal/check_box", form: form, object: variable, key: :multiple_rows
    = render "forms/horizontal/number_field", form: form, object: variable, key: :default_row_number

    .form-group.row
      %label.col-md-2.col-form-label Variables
      .col-md-10
        .form-control-plaintext
          = hidden_field_tag "variable[grid_tokens][][variable_id]", nil
          #form_grid_variables{ data: { object: "sortable" } }
            - @variable.child_grid_variables.each do |child_grid_variable|
              = render "variables/edit_grid_variable", child_grid_variable: child_grid_variable
          .btn-toolbar
            = link_to "Add Variable", "#", id: "add_grid_variable", class: "btn btn-light btn-sm", data: { project_id: @project.to_param }

  %div{ data: { object: "autocomplete" } }
    = render "forms/horizontal/text_area", form: form, object: variable, key: :autocomplete_values, rows: 7, help_text: "Each value should be on its own line."

    - if false
      .form-group.row
        %label.col-md-2.col-form-label User submitted
        .col-md-10
          .form-control-plaintext
            = @variable.user_submitted_sheet_variables.collect { |sv| link_to sv.value.to_s, [sv.sheet.project, sv.sheet] }.join(", ").html_safe

  = render "forms/horizontal/submit", form: form, object: [variable.project, variable]

= render "translations/language_dropdown", button_class: "" if sheet.design.translated?

- if sheet.design.repeated? && sheet.created_at >= Time.zone.now - 1.hour
  - if @sheet.subject_event
    - url = new_data_entry_project_subject_path(@project, @subject, @sheet.design, sheet: { subject_event_id: @sheet.subject_event_id })
  - else
    - url = new_data_entry_project_subject_path(@project, @subject, @sheet.design)

  = link_to url, class: "btn btn-primary" do
    = icon("far", "copy")
    %span.d-none.d-md-inline Create another?

- if sheet.auto_locked?
  %span.dropdown
    = link_to "#", class: "btn btn-light dropdown-toggle", data: { toggle: "dropdown" } do
      .d-inline-block.d-sm-none
        = icon("fas", "cog")
      .d-none.d-sm-inline-block Actions
    .dropdown-menu.dropdown-menu-right
      %span.dropdown-item-text.text-primary.nowrap
        = icon("fas", "lock")
        Sheet locked
      - if project.editable_by?(current_user)
        .dropdown-divider
        = link_to unlock_project_sheet_path(project, sheet), method: :post, class: "dropdown-item" do
          = icon("fas", "unlock")
          Unlock for
          - case project.auto_lock_sheets when "after24hours"
            24 hours
          - when "after1week"
            1 week
          - when "after1month"
            1 month
        = link_to unlock_and_edit_project_sheet_path(project, sheet), method: :post, class: "dropdown-item" do
          = icon("fas", "unlock-alt")
          Unlock and edit
        - if sheet.recent_unlock_requests.count > 0
          = link_to "#", data: { object: "toggle-visibility", target: "#sheet_unlock_requests" }, class: "dropdown-item" do
            = icon("fas", "list-alt")
            View requests
      - elsif sheet.editable_by?(current_user)
        .dropdown-divider
        - if sheet.recent_unlock_requested?(current_user)
          = link_to "#", data: { object: "toggle-visibility", target: "#sheet_unlock_requested" }, class: "dropdown-item" do
            = icon("fas", "unlock")
            Unlock requested...
        - else
          = link_to "#", data: { object: "toggle-visibility", target: "#sheet_unlock_request" }, class: "dropdown-item" do
            = icon("fas", "unlock")
            Request unlock
      - if sheet.editable_by?(current_user)
        .dropdown-divider
        = link_to "#", class: "dropdown-item disabled text-muted", tabindex: "-1" do
          = icon("fas", "pencil-alt")
          Edit
        = link_to "#", class: "dropdown-item disabled text-muted", tabindex: "-1" do
          = icon("fas", "exchange-alt")
          Reassign
        = link_to "#", class: "dropdown-item disabled text-muted", tabindex: "-1" do
          = icon("fas", "calendar-day")
          Change event
      .dropdown-divider
      = link_to project_sheet_path(sheet.project, sheet, format: "pdf", language: World.translate_language? ? World.language : nil), target: "_blank", class: "dropdown-item" do
        = icon("fas", "print")
        Print
      - if sheet.editable_by?(current_user)
        .dropdown-divider
        = link_to "#", class: "dropdown-item disabled text-muted", tabindex: "-1" do
          = icon("fas", "trash-alt")
          Delete
- else
  - if sheet.editable_by?(current_user)
    %span.dropdown
      = link_to "#", class: "btn btn-light dropdown-toggle", data: { toggle: "dropdown" } do
        .d-inline-block.d-sm-none
          = icon("fas", "cog")
        .d-none.d-sm-inline-block Actions

      .dropdown-menu.dropdown-menu-right
        = link_to edit_project_sheet_path(sheet.project, sheet, language: params[:language]), class: "dropdown-item" do
          = icon("fas", "pencil-alt")
          Edit
        = link_to reassign_project_sheet_path(project, sheet), class: "dropdown-item" do
          = icon("fas", "exchange-alt")
          Reassign
        = link_to change_event_project_sheet_path(project, sheet), class: "dropdown-item" do
          = icon("fas", "calendar-day")
          Change event
        .dropdown-divider
        = link_to project_sheet_path(sheet.project, sheet, format: "pdf", language: World.translate_language? ? World.language : nil), target: "_blank", class: "dropdown-item" do
          = icon("fas", "print")
          Print
        .dropdown-divider
        = link_to [sheet.project, sheet], method: :delete, data: { confirm: "Delete #{sheet.name}?" }, class: "dropdown-item" do
          .text-danger
            = icon("fas", "trash-alt")
            Delete
  - else
    = link_to project_sheet_path(sheet.project, sheet, format: "pdf", language: World.translate_language? ? World.language : nil), target: "_blank", class: "btn btn-light" do
      = icon("fas", "print")
      %span.d-none.d-md-inline Print

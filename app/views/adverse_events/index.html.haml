- @title = "Adverse Events"
- @menu_title = "#{@project.name} #{@title}"

- content_for :sidebar, render("projects/sidebar")

- content_for :header do
  .float-right
    - if @project.site_or_project_editor?(current_user)
      = link_to plus_or("Report Adverse Event"), new_project_adverse_event_path(@project), class: "btn btn-accent btn-shadow"
    - if @project.editable_by?(current_user)
      = succeed " " do
        = link_to export_project_adverse_events_path, class: "btn btn-light d-none d-sm-inline-block" do
          = icon("fas", "download")
          Export
  = @title
- content_for :breadcrumbs do
  = render "layouts/per_page_breadcrumbs", per_page: 40, object_count: @adverse_events.total_count
  %ol
    %li.breadcrumb-muted adverse events
    %li= link_to icon("fas", "search"), "#", data: { object: "toggle-search-container", target: "#search" }

= render "search/simple", url: project_adverse_events_path(@project)

- if @adverse_events.present?
  - viewable_sites = current_user.all_viewable_sites.where(project_id: @project.id).order_number_and_name.to_a
  - filtered_params = params.permit(:site_id, :user_id, :status, :search)
  - all_reporters = User.where(id: @project.adverse_events.select(:user_id)).order(:full_name)
  - site_or_project_editor = @project.site_or_project_editor?(current_user)
  .dashboard-container.dashboard-table
    %table.table.table-striped.table-borderless.table-hover.table-sticky
      %col{ width: "1px" }
      %col
      %col.d-none.d-sm-table-column
      %col.d-none.d-lg-table-column
      %col.d-none.d-lg-table-column
      - if viewable_sites.count > 1
        %col.d-none.d-md-table-column
      %col
      - if site_or_project_editor
        %col{ width: "1px" }
      %thead
        %tr
          = th_sort_field @order, "created", "#", extra_class: "text-center", permit: [:site_id, :user_id, :status]
          = th_sort_field @order, "subject", "Subject", permit: [:site_id, :user_id, :status]
          %th.d-none.d-sm-table-cell Description
          = th_sort_field_rev @order, "ae_date", "Date of AE", extra_class: "d-none d-lg-table-cell text-center nowrap", permit: [:site_id, :user_id, :status]
          %th.d-none.d-lg-table-cell.nowrap{ class: ["reported_by", "reported_by desc"].include?(params[:order]) ? "sort-selected" : nil }
            = link_to "Reported By", project_adverse_events_path(@project, filtered_params.merge(order: (params[:order] == "reported_by" ? "reported_by desc" : "reported_by")))
            %span.dropleft
              = link_to "#", data: { toggle: "dropdown" } do
                - if params[:user_id].present?
                  = icon("fas", "filter", class: "text-primary")
                - else
                  = icon("fas", "filter")
              .dropdown-menu
                = link_to "All Users", project_adverse_events_path(@project, filtered_params.merge(order: params[:order], user_id: nil)), style: params[:user_id].blank? ? "font-weight:bold;" : "", class: "dropdown-item"
                - all_reporters.each do |user|
                  = link_to user.full_name, project_adverse_events_path(@project, filtered_params.merge(order: params[:order], user_id: user.id)), style: params[:user_id].to_s == user.id.to_s ? "font-weight:bold;" : "", class: "dropdown-item"
          - if viewable_sites.count > 1
            %th.d-none.d-md-table-cell.nowrap{ class: ["site", "site desc"].include?(params[:order]) ? "sort-selected" : nil }
              = link_to "Site", project_adverse_events_path(@project, filtered_params.merge(order: (params[:order] == "site" ? "site desc" : "site")))
              %span.dropleft
                = link_to "#", data: { toggle: "dropdown" } do
                  - if params[:site_id].present?
                    = icon("fas", "filter", class: "text-primary")
                  - else
                    = icon("fas", "filter")
                .dropdown-menu
                  = link_to "All Sites", project_adverse_events_path(@project, filtered_params.merge(order: params[:order], site_id: nil)), style: params[:site_id].blank? ? "font-weight:bold;" : "", class: "dropdown-item"
                  - viewable_sites.each do |site|
                    = link_to site.number_and_short_name, project_adverse_events_path(@project, filtered_params.merge(order: params[:order], site_id: site.id)), style: params[:site_id].to_s == site.id.to_s ? "font-weight:bold;" : "", class: "dropdown-item"
          %th.nowrap.text-center{ class: ["adverse_events.closed", "adverse_events.closed desc"].include?(params[:order]) ? "sort-selected" : nil }
            = link_to "Status", project_adverse_events_path(@project, filtered_params.merge(order: (params[:order] == "adverse_events.closed desc" ? "adverse_events.closed" : "adverse_events.closed desc")))
            %span.dropleft
              = link_to "#", data: { toggle: "dropdown" } do
                - if params[:status].present?
                  = icon("fas", "filter", class: "text-primary")
                - else
                  = icon("fas", "filter")
              .dropdown-menu
                = link_to "Any Status", project_adverse_events_path(@project, filtered_params.merge(order: params[:order], status: nil)), style: params[:status].blank? ? "font-weight:bold;" : "", class: "dropdown-item"
                - [["Open", "open"], ["Closed", "closed"]].each do |status_label, status_value|
                  = link_to status_label, project_adverse_events_path(@project, filtered_params.merge(order: params[:order], status: status_value)), style: params[:status].to_s == status_value.to_s ? "font-weight:bold;" : "", class: "dropdown-item"
          - if site_or_project_editor
            %th.text-center Actions
      %tbody
        - @adverse_events.each do |adverse_event|
          %tr
            %td.text-center.nowrap
              = link_to [@project, adverse_event] do
                - if adverse_event.number
                  = adverse_event.name
                - else
                  = icon("fas", "spinner", class: "fa-pulse")
            %td= link_to adverse_event.subject.subject_code, [@project, adverse_event]
            %td.d-none.d-sm-table-cell{ style: "max-width: 200px;" }
              .overflow-hidden.nowrap= adverse_event.description.truncate(40)
            %td.d-none.d-lg-table-cell.text-center.nowrap= adverse_event.adverse_event_date.strftime("%b %-d, %Y")
            %td.d-none.d-lg-table-cell= adverse_event.user.nickname
            - if viewable_sites.count > 1
              %td.d-none.d-md-table-cell.nowrap= adverse_event.site.number_and_short_name
            %td.text-center
              - if adverse_event.closed?
                %span.badge.badge-light Closed
              - else
                %span.badge.badge-success Open
            - if site_or_project_editor
              %td.text-center
                = render "layouts/edit_delete_dropdown", edit_url: edit_project_adverse_event_path(@project, adverse_event), delete_url: [@project, adverse_event], delete_confirmation: "Delete #{adverse_event.name}?"

  .center-horizontally= paginate @adverse_events, theme: "bootstrap"
- else
  .jumbotron.jumbotron-custom-text
    No adverse events found.
    - if params[:status].present? || params[:user_id].present? || params[:site_id].present?
      = succeed "." do
        = link_to "Clear filters", project_adverse_events_path(@project, search: params[:search])
